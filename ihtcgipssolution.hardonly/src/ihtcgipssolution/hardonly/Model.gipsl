package "ihtcgipssolution.hardonly"
import "platform:/resource/ihtcmetamodel/model/Ihtcmetamodel.ecore"
config {  
	solver := GUROBI;
	timeLimit := true [value := 30.0, includeInitTime := true];
	randomSeed := true [value := 7];
	presolve := true;
	debugOutput := false;
	lpOutput := true [path := "gurobi.lp"];
	threadCount := true [value := 4];
}
pattern patientRoomDay {
	h : Hospital {
		- rooms -> r
		- patients -> p
		- days -> d
	}
	r : Room
	p : Patient
	d : Day
	# p.surgeryReleaseDay <= d.id
	# p.surgeryDueDate + p.lengthOfStay - 1 >= d.id
}
pattern occupantRoomDay {
	h : Hospital {
		- rooms -> r
		- occupants -> o
		- days -> d
	}
	r : Room
	o : Occupant
	d : Day
	# r.name == o.roomId
	# o.lengthOfStay >= d.id
}
pattern dayRoomGender {
	h : Hospital {
		- days -> d
		- rooms -> r
		- genders -> g
	}
	d : Day
	r : Room
	g : Gender
}
mapping roomDayPatientLoad to patientRoomDay;
mapping roomDayGender to dayRoomGender;
constraint with roomDayGender {
	[
		mappings.roomDayPatientLoad->filter( //
			element.nodes.d == context.nodes.d //
			& element.nodes.r == context.nodes.r //
			& element.nodes.p.gender == context.nodes.g.name //
		)->sum(element.value)
		+
		patterns.occupantRoomDay->filter( //
			element.nodes.d == context.nodes.d //
			& element.nodes.r == context.nodes.r //
			& element.nodes.o.gender == context.nodes.g.name //
		)->sum(1)
		>= 1
	]
	=>
	[
		context.value == 1
	]
}